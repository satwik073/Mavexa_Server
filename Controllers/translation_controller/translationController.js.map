{"version":3,"file":"translationController.js","sourceRoot":"/","sources":["Controllers/translation_controller/translationController.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA,gDAAiC;AACjC,4CAA4B;AAC5B,sDAAsE;AACtE,qFAA+F;AAE/F,0EAAkD;AAErC,QAAA,yBAAyB,GAAG,IAAA,sDAAgC,EAAC,CAAO,OAAgB,EAAE,QAAkB,EAAE,EAAE;IAErH,MAAM,EAAE,gBAAgB,EAAE,GAAG,OAAO,CAAC,MAAM,CAAC;IAC5C,MAAM,kBAAkB,GAA8B;QAClD,CAAC,0BAAc,CAAC,WAAW,CAAC,EAAE,wBAAY,CAAC,WAAW;QACtD,CAAC,0BAAc,CAAC,WAAW,CAAC,EAAE,wBAAY,CAAC,WAAW;QACtD,CAAC,0BAAc,CAAC,WAAW,CAAC,EAAE,wBAAY,CAAC,WAAW;KACzD,CAAC;IAEF,IAAI,gBAAgB,IAAI,gBAAgB,IAAI,kBAAkB,EAAE,CAAC;QAC7D,MAAM,QAAQ,GAAG,cAAa,CAAC,IAAI,CAAC,SAAS,EAAC,OAAO,EAAE,cAAc,EAAE,kBAAkB,CAAC,gBAAgB,CAAC,CAAC,CAAC;QAC7G,OAAO,CAAC,GAAG,CAAC,MAAM,EAAC,QAAQ,CAAC,CAAA;QAC5B,IAAI,YAAU,CAAC,UAAU,CAAC,QAAQ,CAAC,EAAE,CAAC;YAClC,MAAM,WAAW,GAAG,YAAU,CAAC,YAAY,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;YAC/D,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAA;YACxB,OAAO,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC;QAClD,CAAC;aAAM,CAAC;YACJ,OAAO,QAAQ,CAAC,MAAM,CAAC,2BAAiB,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,6BAA6B,EAAE,CAAC,CAAC;QACvG,CAAC;IACL,CAAC;SAAM,CAAC;QACJ,OAAO,CAAC,GAAG,CAAC,8BAA8B,gBAAgB,EAAE,CAAC,CAAC;QAC9D,OAAO,QAAQ,CAAC,MAAM,CAAC,2BAAiB,CAAC,kBAAkB,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,4BAA4B,EAAE,CAAC,CAAC;IAC/G,CAAC;AACL,CAAC,CAAA,CAAC,CAAC","sourcesContent":["import pathSpecifier from \"path\";\r\nimport fileSystem from 'fs';\r\nimport { ISO_Structures, JSON_PACKETS } from \"../../Common/structure\";\r\nimport { ASYNC_ERROR_HANDLER_ESTAIBLISHED } from \"../../Middlewares/Error/ErrorHandlerReducer\";\r\nimport { Request, Response } from \"express\";\r\nimport HTTPS_STATUS_CODE from \"http-status-codes\";\r\n\r\nexport const translationConfigSettings = ASYNC_ERROR_HANDLER_ESTAIBLISHED(async (request: Request, response: Response) => {\r\n\r\n    const { languageSelector } = request.params;\r\n    const translationSupport: { [key: string]: string } = {\r\n        [ISO_Structures.ISO_639_EIN]: JSON_PACKETS.ISO_639_EIN,\r\n        [ISO_Structures.ISO_723_HIN]: JSON_PACKETS.ISO_723_HIN,\r\n        [ISO_Structures.ISO_812_FRN]: JSON_PACKETS.ISO_812_FRN,\r\n    };\r\n\r\n    if (languageSelector && languageSelector in translationSupport) {\r\n        const filePath = pathSpecifier.join(__dirname,'../..', 'Translations', translationSupport[languageSelector]);\r\n        console.log(\"path\",filePath)     \r\n        if (fileSystem.existsSync(filePath)) {\r\n            const fileContent = fileSystem.readFileSync(filePath, 'utf-8');\r\n            console.log(fileContent)\r\n            return response.json(JSON.parse(fileContent));\r\n        } else {\r\n            return response.status(HTTPS_STATUS_CODE.NOT_FOUND).json({ error: 'Translation file not found.' });\r\n        }\r\n    } else {\r\n        console.log(`Invalid language selector: ${languageSelector}`);\r\n        return response.status(HTTPS_STATUS_CODE.METHOD_NOT_ALLOWED).json({ error: 'Invalid language selector.' });\r\n    }\r\n});\r\n"]}