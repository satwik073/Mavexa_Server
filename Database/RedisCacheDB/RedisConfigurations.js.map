{"version":3,"file":"RedisConfigurations.js","sourceRoot":"/","sources":["Database/RedisCacheDB/RedisConfigurations.ts"],"names":[],"mappings":";;;;;;AAAA,sDAA4B;AAE5B,MAAM,6BAA6B,GAAG,OAAO,CAAC,GAAG,CAAC,IAAI,KAAK,YAAY,CAAA;AACvE,MAAM,qBAAqB,GAAG,6BAA6B;IACvD,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,gBAAgB;IAC9B,CAAC,CAAC,wBAAwB,CAAA;AAE9B,MAAM,sBAAsB,GAAG,IAAI,iBAAK,CAAC;IACrC,IAAI,EAAE,qBAAqB,IAAI,OAAO,CAAC,GAAG,CAAC,gBAAgB,IAAI,WAAW;IAC1E,QAAQ,EAAE,OAAO,CAAC,GAAG,CAAC,sBAAsB,IAAI,SAAS;IACzD,oBAAoB,EAAE,CAAC;IACvB,cAAc,EAAE,6BAA6B,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM;IAC9D,aAAa,EAAE,CAAC,WAAW,EAAE,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,WAAW,GAAG,EAAE,EAAE,IAAI,CAAC;IAChE,WAAW,EAAE,IAAI;IACjB,gBAAgB,EAAE,IAAI;IACtB,oBAAoB,EAAE,IAAI;IAC1B,sBAAsB,EAAE,CAAC,6BAA6B;IACtD,SAAS,EAAE,cAAc;IACzB,gBAAgB,EAAE,CAAC,aAAmB,EAAE,EAAE;;QACtC,MAAM,WAAW,GAAG,UAAU,CAAC;QAC/B,OAAO,CAAC,MAAA,aAAa,aAAb,aAAa,uBAAb,aAAa,CAAE,OAAO,0CAAE,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC;IAC1E,CAAC;IACD,SAAS,EAAE,KAAK;IAChB,kBAAkB,EAAE,IAAI;IACxB,mBAAmB,EAAC,KAAK;IACzB,GAAG,EAAE,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,CAAC,EAAE,kBAAkB,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,SAAS;CACjF,CAAC,CAAA;AAiBO,wDAAsB;AAf/B,sBAAsB,CAAC,EAAE,CAAC,OAAO,EAAE,CAAC,WAAiB,EAAE,EAAE;IACrD,OAAO,CAAC,KAAK,CAAC,wBAAwB,EAAE,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,OAAO,EAAG,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,KAAK,CAAC,CAAA;AACtF,CAAC,CAAC,CAAA;AACF,sBAAsB,CAAC,EAAE,CAAC,SAAS,EAAE,GAAG,EAAE;IACtC,OAAO,CAAC,GAAG,CAAC,iCAAiC,CAAC,CAAC;AACnD,CAAC,CAAC,CAAC;AAEH,sBAAsB,CAAC,EAAE,CAAC,cAAc,EAAE,GAAG,EAAE;IAC3C,OAAO,CAAC,GAAG,CAAC,qCAAqC,CAAC,CAAC;AACvD,CAAC,CAAC,CAAC;AAEH,sBAAsB,CAAC,EAAE,CAAC,KAAK,EAAE,GAAG,EAAE;IAClC,OAAO,CAAC,KAAK,CAAC,iDAAiD,CAAC,CAAC;AACrE,CAAC,CAAC,CAAC","sourcesContent":["import Redis from \"ioredis\";\r\n\r\nconst isProductionEnviornmentLoaded = process.env.MODE === 'production'\r\nconst redisConnectionLoaded = isProductionEnviornmentLoaded\r\n    ? process.env.REDIS_CONNECTION\r\n    : 'redis://localhost:6379'\r\n\r\nconst redisClusterConnection = new Redis({\r\n    host: redisConnectionLoaded || process.env.REDIS_CONNECTION || 'localhost',\r\n    password: process.env.REDIS_PASSWORD_GRANTED || undefined,\r\n    maxRetriesPerRequest: 5,\r\n    connectTimeout: isProductionEnviornmentLoaded ? 50000 : 100000,\r\n    retryStrategy: (times_retry) => Math.min(times_retry * 50, 5000),\r\n    lazyConnect: true,\r\n    enableReadyCheck: true,\r\n    enableAutoPipelining: true,\r\n    showFriendlyErrorStack: !isProductionEnviornmentLoaded,\r\n    keyPrefix: 'Mavexa-Cache',\r\n    reconnectOnError: (error_fetched : any) => {\r\n        const targetError = 'READONLY';\r\n        return (error_fetched?.message?.includes(targetError)) ? true : false;\r\n    },\r\n    keepAlive: 30000,\r\n    enableOfflineQueue: true,\r\n    maxLoadingRetryTime:20000,\r\n    tls: process.env.REDIS_TLS_ENABLED ? { rejectUnauthorized: false } : undefined\r\n})\r\n\r\nredisClusterConnection.on('error', (error_value : any) => {\r\n    console.error('Redis Connection Error', error_value?.message , error_value?.stack)\r\n})\r\nredisClusterConnection.on('connect', () => {\r\n    console.log('Successfully connected to Redis');\r\n});\r\n\r\nredisClusterConnection.on('reconnecting', () => {\r\n    console.log('Attempting to reconnect to Redis...');\r\n});\r\n\r\nredisClusterConnection.on('end', () => {\r\n    console.error('Connection to Redis has ended. Investigating...');\r\n});\r\n\r\nexport { redisClusterConnection };"]}