{"version":3,"file":"server.js","sourceRoot":"/","sources":["server.ts"],"names":[],"mappings":"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","sourcesContent":["require(\"./Common/instrument\");\r\nimport { Request, Response, NextFunction } from 'express';\r\nimport user_controlling_routes from './Routes/user_routers/userRouter';\r\nimport admin_controlling_routes from './Routes/admin_routes/adminRoutes';\r\nimport connection_DB_estaiblished from './DB/DB/db_config';\r\nimport path from 'path';\r\nimport { RedisClientType, createClient } from 'redis'; \r\n\r\nconst operatingSystem = require('os');\r\nconst clusterPremises = require('cluster');\r\nconst Sentry = require(\"@sentry/node\");\r\nconst express = require('express');\r\nconst bodyParser = require('body-parser');\r\nconst cors = require('cors');\r\nconst dotenv = require('dotenv');\r\nconst compression = require('compression');\r\n\r\nconst loadEnvironmentVariables = () => {\r\n    const envFile = process.env.VERCEL_ENV === 'production' \r\n        ? './.env.production' \r\n        : './.env.staging';\r\n    dotenv.config({ path: path.resolve(__dirname, envFile) });\r\n    console.log(`Loaded environment from ${envFile}`);\r\n};\r\n\r\nloadEnvironmentVariables();\r\nconnection_DB_estaiblished();\r\n\r\nconst initializeRedisClient = async (): Promise<RedisClientType> => {\r\n    const redisUrl = process.env.REDIS_CONNECTION;\r\n    if (!redisUrl) {\r\n        throw new Error('REDIS_CONNECT is not defined in the environment variables');\r\n    }\r\n\r\n    const redisClient = createClient({\r\n        url: redisUrl\r\n    });\r\n\r\n    redisClient.on('connect', () => {\r\n        console.log('Connected to Redis');\r\n    });\r\n\r\n    redisClient.on('error', (err) => {\r\n        console.error('Redis error:', err);\r\n    });\r\n\r\n    await redisClient.connect();\r\n    return redisClient as RedisClientType<any>;\r\n};\r\n\r\nconst server_configs = async () => {\r\n    const app = express();\r\n    const redisClient = await initializeRedisClient();\r\n    app.use(compression());\r\n    app.use(bodyParser.json());\r\n    app.use(cors());\r\n    app.use((req: Request, res: Response, next: NextFunction) => {\r\n        req.redisClient = redisClient;\r\n        next();\r\n    });\r\n    Sentry.init({ dsn: process.env.SENTRY_DSN });\r\n\r\n    const PORT_ESTAIBLISHED = process.env.PORT_ESTAIBLISHED || 8000;\r\n    app.use('/api/v1/', user_controlling_routes);\r\n    app.use('/api/v1/controls', admin_controlling_routes);\r\n    app.listen(PORT_ESTAIBLISHED, () => {\r\n        console.log(`Server running successfully on port ${PORT_ESTAIBLISHED}`);\r\n    });\r\n};\r\n\r\nif (!process.env.VERCEL_ENV) {\r\n    if (clusterPremises.isPrimary) {  \r\n        const numCPUs = operatingSystem.cpus().length;\r\n        console.log(`Primary process ${process.pid} is running`);\r\n        console.log(`Forking server for ${numCPUs} CPUs`);\r\n        for (let i = 0; i < numCPUs; i++) {\r\n            clusterPremises.fork();\r\n        }\r\n        clusterPremises.on('exit', (worker: { process: { pid: any; }; }) => {\r\n            console.log(`Worker ${worker.process.pid} died. Starting a new worker...`);\r\n            clusterPremises.fork();\r\n        });\r\n    } else {\r\n        server_configs(); \r\n    }\r\n} else {\r\n    server_configs();\r\n}\r\n"]}