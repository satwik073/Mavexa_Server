{"version":3,"file":"server.js","sourceRoot":"/","sources":["server.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA,OAAO,CAAC,qBAAqB,CAAC,CAAA;AAC9B,MAAM,MAAM,GAAG,OAAO,CAAC,cAAc,CAAC,CAAC;AACvC,MAAM,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,CAAA;AAClC,MAAM,UAAU,GAAG,OAAO,CAAC,aAAa,CAAC,CAAA;AACzC,MAAM,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAA;AAC5B,MAAM,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAA;AAEhC,kFAAsE;AACtE,oFAAwE;AACxE,kEAA0D;AAC1D,MAAM,GAAG,GAAG,OAAO,EAAE,CAAA;AACrB,GAAG,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC,CAAA;AAC1B,GAAG,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAA;AAEf,MAAM,CAAC,MAAM,EAAE,CAAC;AAChB,MAAM,iBAAiB,GAAG,OAAO,CAAC,GAAG,CAAC,iBAAiB,IAAI,IAAI,CAAC;AAChE,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,OAAgB,EAAG,QAAmB,EAAC,EAAE;IACnD,QAAQ,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAA;AACnC,CAAC,CAAC,CAAA;AACF,GAAG,CAAC,GAAG,CAAC,UAAU,EAAE,oBAAuB,CAAC,CAAC;AAC7C,GAAG,CAAC,GAAG,CAAC,kBAAkB,EAAE,qBAAwB,CAAC,CAAA;AACrD,MAAM,CAAC,wBAAwB,CAAC,GAAG,CAAC,CAAC;AACrC,GAAG,CAAC,MAAM,CAAC,iBAAiB,EAAE,GAAS,EAAE;IACrC,IAAA,mBAA0B,GAAE,CAAC;IAC7B,OAAO,CAAC,GAAG,CAAC,uCAAuC,iBAAiB,EAAE,CAAC,CAAC;AAC5E,CAAC,CAAA,CAAC,CAAC;AAEU,QAAA,iBAAiB,GAAG,OAAO,CAAC,mBAAmB,CAAC,CAAA","sourcesContent":["require(\"./Common/instrument\")\r\nconst Sentry = require(\"@sentry/node\");\r\nconst express = require('express')\r\nconst bodyParser = require('body-parser')\r\nconst cors = require('cors')\r\nconst dotenv = require('dotenv')\r\nimport { Request ,Response , NextFunction } from 'express';\r\nimport user_controlling_routes from './Routes/user_routers/userRouter'\r\nimport admin_controlling_routes from './Routes/admin_routes/adminRoutes'\r\nimport connection_DB_estaiblished from './DB/DB/db_config'\r\nconst app = express()\r\napp.use(bodyParser.json())\r\napp.use(cors())\r\n\r\ndotenv.config();\r\nconst PORT_ESTAIBLISHED = process.env.PORT_ESTAIBLISHED || 8000;\r\napp.use('/', (Request: Request , Response : Response)=>{\r\n    Response.send('API is working')\r\n})\r\napp.use('/api/v1/', user_controlling_routes);\r\napp.use('/api/v1/controls', admin_controlling_routes)\r\nSentry.setupExpressErrorHandler(app);\r\napp.listen(PORT_ESTAIBLISHED, async () => {\r\n    connection_DB_estaiblished();\r\n    console.log(`Server running successfully on port ${PORT_ESTAIBLISHED}`);\r\n});\r\n\r\nexport const HTTPS_STATUS_CODE = require('http-status-codes')"]}