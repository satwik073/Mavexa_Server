{"version":3,"file":"ErrorHandlerReducer.js","sourceRoot":"/","sources":["Middlewares/Error/ErrorHandlerReducer.ts"],"names":[],"mappings":"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","sourcesContent":["import { Request, Response, NextFunction } from \"express\";\r\nimport { DATABASE_CONNECTION_REQUEST_HANDLER, DEFAULT_EXECUTED, ERROR_VALUES_FETCHER } from \"../../Constants/Errors/PreDefinedErrors\";\r\nimport RolesSpecified, { AdminDocument, AuthTypeDeclared, DatabaseExitTraceRemaining, DatabaseTrace, SuccessManager, UserAuthControllingError, UserDocument } from \"../../Common/structure\";\r\nimport user_detailed_description from \"../../Model/user_model/UserRegisteringModal\";\r\nimport admin_detailed_structure_description from \"../../Model/admin_model/AdminDataModel\";\r\nimport mongoose from \"mongoose\"\r\nimport { JWT_KEY_GENERATION_ONBOARDED } from \"../../Constants/Functions/CommonFunctions\";\r\nimport { email_service_enabled } from \"../../Services/EmailServices\";\r\nexport const ASYNC_ERROR_HANDLER_ESTAIBLISHED = (fn: Function) => (request: Request, response: Response, next_function: NextFunction) => Promise.resolve(fn(request, response, next_function)).catch(next_function)\r\n\r\n\r\nexport const MISSING_FIELDS_VALIDATOR = (fields_parameter_expression: Record<string, any>, response: Response, user_auth_type_specified: AuthTypeDeclared) => {\r\n  for (const [key_validator, value_validator] of Object.entries(fields_parameter_expression)) {\r\n    if (!value_validator?.trim()) {\r\n      return response.status(400).json(ERROR_VALUES_FETCHER.EMPTY_FIELDS_VALIDATOR(user_auth_type_specified).MESSAGE);\r\n    }\r\n  }\r\n  return null\r\n}\r\nexport const EXISTING_USER_FOUND_IN_DATABASE = async (\r\n  user_registered_email: string,\r\n  user_auth_type_specified: AuthTypeDeclared,\r\n  authorities_provided_by_role: RolesSpecified\r\n): Promise<UserDocument | AdminDocument | null> => {\r\n  const exisiting_user_found = authorities_provided_by_role === RolesSpecified.ADMIN_DESC\r\n    ? await admin_detailed_structure_description.findOne({ admin_userEmail: user_registered_email }) as AdminDocument | null\r\n    : await user_detailed_description.findOne({ registered_user_email: user_registered_email }) as UserDocument | null;\r\n\r\n  return user_auth_type_specified === AuthTypeDeclared.USER_REGISTRATION && exisiting_user_found\r\n    ? (() => {  throw new UserAuthControllingError(ERROR_VALUES_FETCHER.USER_FOUND_OR_NOT_CONTROLLED(user_auth_type_specified).USER_REGISTRATION_SUPPORT); })()\r\n    : user_auth_type_specified === AuthTypeDeclared.USER_LOGIN && !exisiting_user_found\r\n      ? (() => {  throw new UserAuthControllingError(ERROR_VALUES_FETCHER.USER_FOUND_OR_NOT_CONTROLLED(user_auth_type_specified).USER_LOGIN_MESSAGE); })()\r\n      : exisiting_user_found;\r\n};\r\n\r\n\r\n\r\nexport const DATABASE_CONDTIONALS = async (url_session: string | undefined) => {\r\n  if (!url_session) {\r\n    throw new DatabaseExitTraceRemaining(\r\n      DATABASE_CONNECTION_REQUEST_HANDLER.DATABASE_CONNECTION_REQUEST(DatabaseTrace.DEFAULT_PARAMETER).MESSAGE\r\n    );\r\n  }\r\n  return await mongoose.connect(url_session)\r\n    .then(() => {\r\n      const successMessage = DATABASE_CONNECTION_REQUEST_HANDLER.DATABASE_CONNECTION_REQUEST(DatabaseTrace.SUCCESS_FETCHING).MESSAGE;\r\n      console.log((successMessage));\r\n      return new SuccessManager(successMessage);\r\n    })\r\n    .catch(() => new DatabaseExitTraceRemaining(\r\n      DATABASE_CONNECTION_REQUEST_HANDLER.DATABASE_CONNECTION_REQUEST(DatabaseTrace.DEFAULT_PARAMETER).MESSAGE\r\n    )\r\n    );\r\n}\r\n\r\nexport const TRACKING_DATA_OBJECT = async (user_provided_data_carried: {}, user_auth_type_specified: RolesSpecified) => {\r\n  try {\r\n    let recognized_user;\r\n    let token_for_authentication_generated;\r\n\r\n    if (user_auth_type_specified === RolesSpecified.ADMIN_DESC) {\r\n      recognized_user = await new admin_detailed_structure_description(user_provided_data_carried).save();\r\n    } else if (user_auth_type_specified === RolesSpecified.USER_DESC) {\r\n      recognized_user = await new user_detailed_description(user_provided_data_carried).save();\r\n      await email_service_enabled({\r\n        senders_email: process.env.SENDER_EMAIL || '',\r\n        recievers_email: recognized_user.registered_user_email,\r\n        otp_for_verfication:  recognized_user.otp_for_verification,\r\n        product_by_company: process.env.PRODUCT_NAME || '',\r\n        recievers_username:  recognized_user.registered_username\r\n    });\r\n      console.log(recognized_user)\r\n    } else {\r\n      throw new UserAuthControllingError(DEFAULT_EXECUTED.ERROR);\r\n    }\r\n\r\n    token_for_authentication_generated = await JWT_KEY_GENERATION_ONBOARDED(recognized_user.id);\r\n   \r\n    return { recognized_user, token_for_authentication_generated };\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\n"]}