{"version":3,"file":"ErrorHandlerReducer.js","sourceRoot":"/","sources":["Middlewares/Error/ErrorHandlerReducer.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,8EAA+E;AAC/E,oEAA0E;AAC1E,uGAAoF;AACpF,4FAA0F;AAc1F,MAAM,wBAAyB,SAAQ,KAAK;IACxC,YAAY,aAAqB;QAC7B,KAAK,CAAC,aAAa,CAAC,CAAA;QACpB,IAAI,CAAC,IAAI,GAAG,mBAAmB,CAAA;IACnC,CAAC;CACJ;AACM,MAAM,gCAAgC,GAAG,CAAC,EAAY,EAAE,EAAE,CAAC,CAAC,OAAgB,EAAE,QAAkB,EAAE,aAA2B,EAAE,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,OAAO,EAAE,QAAQ,EAAE,aAAa,CAAC,CAAC,CAAC,KAAK,CAAC,aAAa,CAAC,CAAA;AAAtM,QAAA,gCAAgC,oCAAsK;AAG5M,MAAM,wBAAwB,GAAG,CAAC,2BAAgD,EAAE,QAAkB,EAAE,wBAA0C,EAAE,EAAE;IACzJ,KAAK,MAAM,CAAC,aAAa,EAAE,eAAe,CAAC,IAAI,MAAM,CAAC,OAAO,CAAC,2BAA2B,CAAC,EAAE,CAAC;QACzF,IAAI,CAAC,CAAA,eAAe,aAAf,eAAe,uBAAf,eAAe,CAAE,IAAI,EAAE,CAAA,EAAE,CAAC;YAC3B,OAAO,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,uCAAoB,CAAC,sBAAsB,CAAC,wBAAwB,CAAC,CAAC,OAAO,CAAC,CAAC;QACpH,CAAC;IACL,CAAC;IACD,OAAO,IAAI,CAAA;AACf,CAAC,CAAA;AAPY,QAAA,wBAAwB,4BAOpC;AACM,MAAM,+BAA+B,GAAG,CAC3C,qBAA6B,EAC7B,wBAA0C,EAC1C,4BAA4C,EACA,EAAE;IAC9C,MAAM,oBAAoB,GAAG,4BAA4B,KAAK,mBAAc,CAAC,UAAU;QACnF,CAAC,CAAC,MAAM,wBAAoC,CAAC,OAAO,CAAC,EAAE,eAAe,EAAE,qBAAqB,EAAE,CAAyB;QACxH,CAAC,CAAC,MAAM,8BAAyB,CAAC,OAAO,CAAC,EAAE,qBAAqB,EAAE,qBAAqB,EAAE,CAAwB,CAAC;IAEvH,OAAO,wBAAwB,KAAK,4BAAgB,CAAC,iBAAiB,IAAI,oBAAoB;QAC1F,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,MAAM,IAAI,wBAAwB,CAAC,uCAAoB,CAAC,4BAA4B,CAAC,wBAAwB,CAAC,CAAC,yBAAyB,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;QAC1J,CAAC,CAAC,wBAAwB,KAAK,4BAAgB,CAAC,UAAU,IAAI,CAAC,oBAAoB;YACnF,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,MAAM,IAAI,wBAAwB,CAAC,uCAAoB,CAAC,4BAA4B,CAAC,wBAAwB,CAAC,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;YACnJ,CAAC,CAAC,oBAAoB,CAAC;AAC/B,CAAC,CAAA,CAAC;AAdW,QAAA,+BAA+B,mCAc1C","sourcesContent":["import { Request, Response, NextFunction } from \"express\";\r\nimport { ERROR_VALUES_FETCHER } from \"../../Constants/Errors/PreDefinedErrors\";\r\nimport RolesSpecified, { AuthTypeDeclared } from \"../../Common/structure\";\r\nimport user_detailed_description from \"../../Model/user_model/UserRegisteringModal\";\r\nimport admin_detailed_structure_description from \"../../Model/admin_model/AdminDataModel\";\r\ninterface UserDocument extends Document {\r\n    registered_user_email: string;\r\n    registered_user_password: string;\r\n    authorities_provided_by_role : RolesSpecified\r\n    _id: string;\r\n}\r\n\r\ninterface AdminDocument extends Document {\r\n    admin_userEmail: string;\r\n    admin_userPassword: string;\r\n    authorities_provided_by_role : RolesSpecified\r\n    _id: string;\r\n}\r\nclass UserAuthControllingError extends Error {\r\n    constructor(error_message: string) {\r\n        super(error_message)\r\n        this.name = `UserNotExitsError`\r\n    }\r\n}\r\nexport const ASYNC_ERROR_HANDLER_ESTAIBLISHED = (fn: Function) => (request: Request, response: Response, next_function: NextFunction) => Promise.resolve(fn(request, response, next_function)).catch(next_function)\r\n\r\n\r\nexport const MISSING_FIELDS_VALIDATOR = (fields_parameter_expression: Record<string, any>, response: Response, user_auth_type_specified: AuthTypeDeclared) => {\r\n    for (const [key_validator, value_validator] of Object.entries(fields_parameter_expression)) {\r\n        if (!value_validator?.trim()) {\r\n            return response.status(400).json(ERROR_VALUES_FETCHER.EMPTY_FIELDS_VALIDATOR(user_auth_type_specified).MESSAGE);\r\n        }\r\n    }\r\n    return null\r\n}\r\nexport const EXISTING_USER_FOUND_IN_DATABASE = async (\r\n    user_registered_email: string,\r\n    user_auth_type_specified: AuthTypeDeclared,\r\n    authorities_provided_by_role: RolesSpecified\r\n): Promise<UserDocument | AdminDocument | null> => {\r\n    const exisiting_user_found = authorities_provided_by_role === RolesSpecified.ADMIN_DESC\r\n        ? await admin_detailed_structure_description.findOne({ admin_userEmail: user_registered_email }) as AdminDocument | null\r\n        : await user_detailed_description.findOne({ registered_user_email: user_registered_email }) as UserDocument | null;\r\n\r\n    return user_auth_type_specified === AuthTypeDeclared.USER_REGISTRATION && exisiting_user_found\r\n        ? (() => { throw new UserAuthControllingError(ERROR_VALUES_FETCHER.USER_FOUND_OR_NOT_CONTROLLED(user_auth_type_specified).USER_REGISTRATION_SUPPORT); })()\r\n        : user_auth_type_specified === AuthTypeDeclared.USER_LOGIN && !exisiting_user_found\r\n        ? (() => { throw new UserAuthControllingError(ERROR_VALUES_FETCHER.USER_FOUND_OR_NOT_CONTROLLED(user_auth_type_specified).USER_LOGIN_MESSAGE); })()\r\n        : exisiting_user_found;\r\n};\r\n\r\n\r\n"]}