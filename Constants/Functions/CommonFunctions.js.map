{"version":3,"file":"CommonFunctions.js","sourceRoot":"/","sources":["Constants/Functions/CommonFunctions.ts"],"names":[],"mappings":";;;;;;;;;;;;AACA,MAAM,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAA;AAChC,MAAM,GAAG,GAAG,OAAO,CAAC,cAAc,CAAC,CAAA;AAC5B,MAAM,oBAAoB,GAAG,CAAM,6BAAsC,EAAC,EAAE;IAC/E,OAAQ,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,MAAM,CAAC,CAAC,QAAQ,EAAE,CAAC;AACnE,CAAC,CAAA,CAAA;AAFY,QAAA,oBAAoB,wBAEhC;AACM,MAAM,iBAAiB,GAAG,CAAM,6BAAqC,EAAE,EAAE;IAE5E,MAAM,kBAAkB,GAAG,MAAM,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;IACpD,OAAO,MAAM,MAAM,CAAC,IAAI,CAAC,6BAA6B,EAAE,kBAAkB,CAAC,CAAC;AAChF,CAAC,CAAA,CAAA;AAJY,QAAA,iBAAiB,qBAI7B","sourcesContent":["import { response } from \"express\";\r\nconst bcrypt = require('bcrypt')\r\nconst jwt = require('jsonwebtoken')\r\nexport const OTP_GENERATOR_CALLED = async(entered_password_registration : string)=>{\r\n    return  Math.floor(100000 + Math.random() * 900000).toString();\r\n}\r\nexport const SECURING_PASSCODE = async(entered_password_registration: string) =>{\r\n    \r\n    const salted_credentials = await bcrypt.genSalt(10);\r\n    return await bcrypt.hash(entered_password_registration, salted_credentials);\r\n}\r\n\r\n"]}