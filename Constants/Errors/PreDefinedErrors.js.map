{"version":3,"file":"PreDefinedErrors.js","sourceRoot":"/","sources":["Constants/Errors/PreDefinedErrors.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AACA,oEAAwF;AAE3E,QAAA,gBAAgB,GAAG;IAC5B,KAAK,EAAG,sBAAsB;IAC9B,YAAY,EAAI,CAAC,oBAAqC,EAAE,EAAE,CAAA,CAAC;QACvD,OAAO,EAAG,CAAC,oBAAoB,KAAK,mBAAc,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,GAAG,mBAAc,CAAC,UAAU,yBAAyB,CAAC,CAAC,CAAC,CAAC,oBAAoB,KAAK,mBAAc,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,GAAG,mBAAc,CAAC,SAAS,yBAAyB,CAAC,CAAC,CAAC,iBAAiB;KAC1P,CAAC;CAGL,CAAA;AACY,QAAA,oBAAoB,GAAG;IAChC,sBAAsB,EAAE,CAAC,wBAA2C,EAAG,EAAE,CAAC,CAAC;QACvE,OAAO,EAAG,8BAA8B,wBAAwB,CAAC,WAAW,EAAE,WAAW;KAC5F,CAAC;IACF,4BAA4B,EAAG,CAAC,aAAgC,EAAC,EAAE,CAAA,CAAC;QAChE,kBAAkB,EAAG,4BAA4B,4BAAgB,CAAC,UAAU,8BAA8B;QAC1G,yBAAyB,EAAG,2BAA2B,4BAAgB,CAAC,iBAAiB,CAAC,WAAW,EAAE,0BAA0B;KACpI,CAAC;IACF,mBAAmB,EAAG;QAClB,gBAAgB,EAAG,4CAA4C;KAClE;IACD,4BAA4B,EAAE,CAAC,wBAAwC,EAAE,EAAE,CAAC,CAAC;QACzE,mBAAmB,EAAG,CAAC,wBAAwB,KAAK,mBAAc,CAAC,SAAS,CAAC,CAAA,CAAC,CAAC,GAAG,mBAAc,CAAC,SAAS,CAAC,WAAW,EAAE,yDAAyD,CAAC,CAAC,CAAC,wBAAwB,mBAAc,CAAC,UAAU,CAAC,WAAW,EAAE,uCAAuC;KAC7R,CAAC;CAEL,CAAA;AAEY,QAAA,mCAAmC,GAAG;IAC/C,2BAA2B,EAAG,CAAC,2BAA2C,EAAE,EAAE,CAAC,CAAC;QAC5E,OAAO,EAAG,CAAE,2BAA2B,KAAK,yBAAa,CAAC,gBAAgB,CAAE,CAAC,CAAC,CAAC,cAAc,yBAAa,CAAC,gBAAgB,6CAA6C,CAAC,CAAC,CAAC,CAAC,2BAA2B,KAAK,yBAAa,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,4DAA4D,CAAC,CAAC,CAAC,CAAC,2BAA2B,KAAK,yBAAa,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,mEAAmE,CAAC,CAAC,CAAA,4DAA4D;KACtf,CAAC;CACL,CAAA","sourcesContent":["\r\nimport RolesSpecified, { AuthTypeDeclared, DatabaseTrace } from \"../../Common/structure\"\r\n\r\nexport const DEFAULT_EXECUTED = {\r\n    ERROR : 'Something went wrong',\r\n    MISSING_USER  : (user_roles_specified : RolesSpecified) =>({\r\n        MESSAGE : (user_roles_specified === RolesSpecified.ADMIN_DESC) ? `${RolesSpecified.ADMIN_DESC} account doesn't exists` : (user_roles_specified === RolesSpecified.USER_DESC) ? `${RolesSpecified.USER_DESC} account doesn't exists` : `Can't determine`\r\n    }) \r\n    \r\n\r\n}\r\nexport const ERROR_VALUES_FETCHER = {\r\n    EMPTY_FIELDS_VALIDATOR :(user_auth_type_specified : AuthTypeDeclared ) => ({\r\n        MESSAGE : `All fields are required to ${user_auth_type_specified.toLowerCase()} the user`\r\n    }),\r\n    USER_FOUND_OR_NOT_CONTROLLED : (user_detected : AuthTypeDeclared)=>({\r\n        USER_LOGIN_MESSAGE : `User does not exists try ${AuthTypeDeclared.USER_LOGIN} using different Credentials`,\r\n        USER_REGISTRATION_SUPPORT : `User Already exists try ${AuthTypeDeclared.USER_REGISTRATION.toLowerCase()}ing with different email`\r\n    }),\r\n    JWT_DETECTED_ERRORS : {\r\n        JWT_NOT_DETECTED : `JWT secret key not detected in the request`\r\n    },\r\n    INVALID_CREDENTIALS_PROVIDED :(user_auth_type_specified: RolesSpecified) => ({\r\n        INVALID_CREDENTIALS : (user_auth_type_specified === RolesSpecified.USER_DESC)? `${RolesSpecified.USER_DESC.toLowerCase()} provided Invalid credentials, try using different ones` : `Invalid credentials, ${RolesSpecified.ADMIN_DESC.toLowerCase()} cannot log in through this endpoint.`\r\n    })\r\n\r\n}\r\n\r\nexport const DATABASE_CONNECTION_REQUEST_HANDLER = {\r\n    DATABASE_CONNECTION_REQUEST : (database_connection_request : DatabaseTrace) => ({\r\n        MESSAGE : ( database_connection_request === DatabaseTrace.SUCCESS_FETCHING ) ? `Connection ${DatabaseTrace.SUCCESS_FETCHING}fuly estaiblished between client and server` : (database_connection_request === DatabaseTrace.ERROR_ENCOUNTERED) ? `Connection between client and server can't be estaiblished` : (database_connection_request === DatabaseTrace.DEFAULT_PARAMETER) ? `MONGO_DB_URL_ESTAIBLISHED is not defined in environment variables` :`Connection between client and server can't be estaiblished`\r\n    })\r\n}"]}