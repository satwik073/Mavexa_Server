{"version":3,"file":"PreDefinedErrors.js","sourceRoot":"/","sources":["Constants/Errors/PreDefinedErrors.ts"],"names":[],"mappings":";;;AACA,sDAAyD;AAC5C,QAAA,oBAAoB,GAAG;IAChC,sBAAsB,EAAE,CAAC,wBAA2C,EAAG,EAAE,CAAC,CAAC;QACvE,OAAO,EAAG,8BAA8B,wBAAwB,CAAC,WAAW,EAAE,WAAW;KAC5F,CAAC;IACF,4BAA4B,EAAG,CAAC,aAAgC,EAAC,EAAE,CAAA,CAAC;QAChE,kBAAkB,EAAG,4BAA4B,4BAAgB,CAAC,UAAU,8BAA8B;QAC1G,yBAAyB,EAAG,2BAA2B,4BAAgB,CAAC,iBAAiB,CAAC,WAAW,EAAE,0BAA0B;KACpI,CAAC;IACF,mBAAmB,EAAG;QAClB,gBAAgB,EAAG,4CAA4C;KAClE;CAEJ,CAAA","sourcesContent":["\r\nimport { AuthTypeDeclared } from \"../../Common/structure\"\r\nexport const ERROR_VALUES_FETCHER = {\r\n    EMPTY_FIELDS_VALIDATOR :(user_auth_type_specified : AuthTypeDeclared ) => ({\r\n        MESSAGE : `All fields are required to ${user_auth_type_specified.toLowerCase()} the user`\r\n    }),\r\n    USER_FOUND_OR_NOT_CONTROLLED : (user_detected : AuthTypeDeclared)=>({\r\n        USER_LOGIN_MESSAGE : `User does not exists try ${AuthTypeDeclared.USER_LOGIN} using different Credentials`,\r\n        USER_REGISTRATION_SUPPORT : `User Already exists try ${AuthTypeDeclared.USER_REGISTRATION.toLowerCase()}ing with different email`\r\n    }),\r\n    JWT_DETECTED_ERRORS : {\r\n        JWT_NOT_DETECTED : `JWT secret key not detected in the request`\r\n    }\r\n\r\n}"]}